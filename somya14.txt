1. Autoboxing


import java.io.*;
import java.util.*;
 
class JavaPractice 
 {

   public static void main(String[] args)
    {
 
     ArrayList<Integer> al = new ArrayList<Integer>();

        al.add(1);
        al.add(2);
        al.add(24);
 
        
        System.out.println("ArrayList: " + al);
    }
}


2.Unboxing:  

class JavaPractice{  
  public static void main(String args[]){  
    Integer i=new Integer(50);  
        int a=i;  
          
        System.out.println(a);  
 }   
}  



3.Custome Wrapper Class


public class Wrapper {


	  private int it;
	  
	  CustomWrapper(int i){
	    this.it = i;
	  }
	  
	  public int getValue() {
	    return it;
	  }
	  
	  public void setValue(int i) {
	    this.it = i;
	  }
	  
	  public String toString() {
	    return Integer.toString(it);
	  }
	}
	class WrapperDemo1 {
	  public static void main(String[] args) {
		  CustomWrapper w = new CustomWrapper(30);
	    w.setValue(50);
	    System.out.println(w.getValue());
	    System.out.println(w);
	  }
	}



4 . Check two string with ignore class

public class Ignore {

	public static void main(String[] args) {
		
		String s1 = "Somya Singh";
		String s2 = "Somya Singh";
		
		boolean check = s1.equalsIgnoreCase(s2);
		
		System.out.println(check);

	}

}


5 .Print duplicate character from a string

public class DuplicateCharacters 
{    
     public static void main(String[] args)
   {    
        String string1 = "Great responsibility";    
        int count;    
                
        char string[] = string1.toCharArray();    
            
        System.out.println("Duplicate characters in a given string: ");    
          
        for(int i = 0; i <string.length; i++) 
         {    
            count = 1;    
            for(int j = i+1; j <string.length; j++) 
           {    
                if(string[i] == string[j] && string[i] != ' ') 
                {    
                    count++;    
                     
                    string[j] = '0';    
                }    
               }    
            
            if(count > 1 && string[i] != '0')    
                System.out.println(string[i]);    
        }    
      }    
     }     



6 . Anagram

import java.io.*;
import java.util.Arrays;
import java.util.Collections;
 
class Anagram{
 
    static boolean areAnagram(char[] str1, char[] str2)
    {
        
        int n1 = str1.length;
        int n2 = str2.length;
 
        if (n1 != n2)
            return false;
 
        Arrays.sort(str1);
        Arrays.sort(str2);
 
        for (int i = 0; i < n1; i++)
            if (str1[i] != str2[i])
                return false;
 
        return true;
    }
 
    public static void main(String args[])
    {
        char str1[] = { 't', 'e', 's', 't' };
        char str2[] = { 't', 't', 'e', 'w' };
       
        if (areAnagram(str1, str2))
            System.out.println("The two strings are"
                               + " anagram of each other");
        else
            System.out.println("The two strings are not"
                               + " anagram of each other");
    }
}



7.Reverse a string without using reverse method

import java.util.Scanner;  

public class ReverseString {

 

   public static void main(String args[])  
 {  
    String s;  
    Scanner sc=new Scanner(System.in);  
    System.out.print("Enter a String: ");  
    s=sc.nextLine();                 
    System.out.print("After reverse string is: ");  
    for(int i=s.length();i>0;--i)                
    {  
    	System.out.print(s.charAt(i-1));            
    }  
   }  
 }  


8. Frequency of character of string:

public class Frequency   
{  
     public static void main(String[] args) {  
        String str = "picture perfect";  
        int[] freq = new int[str.length()];  
        int i, j;  
          
        //Converts given string into character array  
        char string[] = str.toCharArray();  
          
        for(i = 0; i <str.length(); i++) {  
            freq[i] = 1;  
            for(j = i+1; j <str.length(); j++) {  
                if(string[i] == string[j]) {  
                    freq[i]++;  
                      
                    //Set string[j] to 0 to avoid printing visited character  
                    string[j] = '0';  
                }  
            }  
        }  
          
        //Displays the each character and their corresponding frequency  
        System.out.println("Characters and their corresponding frequencies");  
        for(i = 0; i <freq.length; i++) {  
            if(string[i] != ' ' && string[i] != '0')  
                System.out.println(string[i] + "-" + freq[i]);  
        }  
    }  
}  




9 .Replace the space of a string in specific character

import java.util.Scanner;  

public class ReverseString {

 

   public static void main(String args[])  
 {  
    String s;  
    Scanner sc=new Scanner(System.in);  
    System.out.print("Enter a String: ");  
    s=sc.nextLine();                 
    System.out.print("After reverse string is: ");  
    for(int i=s.length();i>0;--i)                
    {  
    	System.out.print(s.charAt(i-1));            
    }  
   }  
 } 


10 .Remove all white space of a string

public class RemoveWhiteSpace {

	public static void main(String[] args) {
		String sentence = "Please tell me your name";
		System.out.println("Original sentence:" + sentence);
		sentence = sentence.replaceAll("\\s+", "");
		System.out.println("After replacing:" + sentence);
		}
}


11 .Palindrome:

public class Palindrome {

    static boolean isPalindrome(String str)
    {
 
         int i = 0, j = str.length() - 1;
 
          while (i < j) {
 
            if (str.charAt(i) != str.charAt(j))
                return false;
 
            i++;
            j--;
        }
 
        
        return true;
    }
 
   
    public static void main(String[] args)
    {
        
        String str = "somya";
 
        str = str.toLowerCase();
       
        if (isPalindrome(str))
 
            
            System.out.print("Yes");
        else
 
            
            System.out.print("No");
    }
}


12 .Swap two string without using swap variable


public class Swapstring {

   public static void main(String[] args) {    
        String str1 = "somya ", str2 = "singh ";    
         System.out.println("Strings before swapping: " + str1 + " " + str2);    


        str1 = str1 + str2;    

        str2 = str1.substring(0, (str1.length() - str2.length()));    

        str1 = str1.substring(str2.length());    

        System.out.println("Strings after swapping: " + str1 + " " + str2);    
    }    
}     



13 .Divide a string into 5 equal parts

public class DivideString5 {


	
	static void divideString(String str, int n)
	{
		int string_size = str.length();
		int part_size;

		
		if (string_size % n != 0) {
			System.out.println("Invalid  String size"
							+ "is not divisible by n");
			return;
		}

		
		part_size = string_size / n;

		for (int i = 0; i < string_size; i++) {
			if (i % part_size == 0)
				System.out.println();
			System.out.print(str.charAt(i));
		}
	}

	
	public static void main(String[] args)
	{
		
		String str = "Somya_Singh";

		
		divideString(str, 5);
	}
}


14 .Subset of a string:

public class Subset {

	public static void main(String[] args) {

		String str = "Somya";  
		int len = str.length();  
		int temp = 0;  
		String arr[] = new String[len*(len+1)/2]; 
		for(int i = 0; i < len; i++) {
			for(int j = i; j < len; j++) {  
				arr[temp] = str.substring(i, j+1);  
				temp++;  
			}  
		}
		System.out.println("All subsets for given string are: ");
		for(int i = 0; i < arr.length; i++) {  
			System.out.println(arr[i]);  
		}  

	}

}

 



