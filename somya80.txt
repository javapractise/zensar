Inner Class :

 class OuterClass {
  int x = 10;

  class InnerClass {
    int y = 5;
  }
}

public class Main {
  public static void main(String[] args) {
    OuterClass myOuter = new OuterClass();
    OuterClass.InnerClass myInner = myOuter.new InnerClass();
    System.out.println(myInner.y + myOuter.x);
  }
}


Anonymous inner class :


class Nested 

{
	void methodmested()
	{
		System.out.println("nesteded");
		
		
	}
	
}
public class AnonymousInnerClass {

	public static void main(String[] args) {
	Nested nested =new Nested();
	nested.methodmested();
	}

}


Nested Interface :

class Vehicle {
	interface Bike {
		void drive();
	}
}

class NestedInterface implements Vehicle.Bike {
	public void drive() {
		System.out.println("Bike Driving");
	}

	public static void main(String args[]) {
		Vehicle.Bike b = new NestedInterface();
		b.drive();
	}
}